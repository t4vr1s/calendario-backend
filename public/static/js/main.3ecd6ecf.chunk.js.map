{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRouter.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","evento","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActive","eventUpdated","eventDeleted","eventLoaded","eventos","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","uid","msg","setItem","Date","getTime","Swal","fire","placeholder","onChange","console","log","nameUser","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","now","minutes","seconds","add","later","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","Modal","setAppElement","closeModal","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","contentLabel","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","text","icon","trim","length","id","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelectes","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","PrivateRouter","isAuthenticated","Component","component","rest","path","location","pathname","props","to","PublicRoute","AppRouter","checking","exact","initState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ecd6ecf.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchConToken = (endpoint, data, method = 'GET') => {\n  const token = localStorage.getItem('token') || '';\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === 'GET') {\n    return fetch(url, { method, headers: { 'x-token': token } });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchSinToken, fetchConToken };\n","export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  eventStartAddNew: '[event] Start add new',\n  eventLogout: '[event] Clear events',\n  eventSetActive: '[event] Set active',\n  eventAddNew: '[event] Add new',\n  eventClearActive: '[event] Clear active event',\n  eventUpdated: '[event] Event updated',\n  eventDeleted: '[event] Event deletes',\n  eventLoaded: '[event] Events loaded',\n\n  authCheckingFinish: '[auth] Finish Checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n};\n","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n  return events.map((evento) => ({\n    ...evento,\n    end: moment(evento.end).toDate(),\n    start: moment(evento.start).toDate(),\n  }));\n};\n","import { fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport Swal from 'sweetalert2';\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchConToken('events', event, 'POST');\n      const body = await (await resp).json();\n      console.log(body);\n      console.log(event);\n      if (body.ok) {\n        event.id = body.evento.id;\n        event.user = {\n          _id: uid,\n          name: name,\n        };\n        console.log(event);\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActive = () => ({\n  type: types.eventClearActive,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent;\n    try {\n      const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken('events');\n      const body = await resp.json();\n      const eventos = prepareEvents(body.eventos);\n      console.log(eventos);\n      dispatch(eventLoaded(eventos));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = (eventos) => ({\n  type: types.eventLoaded,\n  payload: eventos,\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n","import Swal from 'sweetalert2';\nimport { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { eventLogout } from './events';\n\nexport const starLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\n    const body = await resp.json();\n    const { ok, name, uid, token, msg } = body;\n    if (ok) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: uid,\n          name: name,\n        })\n      );\n    } else {\n      Swal.fire('Error', msg, 'error');\n    }\n  };\n};\n\nexport const startRegister = (name, email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchSinToken(\n      'auth/new',\n      { name, email, password },\n      'POST'\n    );\n    const body = await resp.json();\n    console.log(body);\n    const { ok, name: nameUser, uid, token, msg } = body;\n    if (ok) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: uid,\n          name: nameUser,\n        })\n      );\n    } else {\n      Swal.fire('Error', msg, 'error');\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchConToken('auth/renew');\n    const body = await resp.json();\n    console.log(body);\n    const { ok, name: nameUser, uid, token } = body;\n    if (ok) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: uid,\n          name: nameUser,\n        })\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish,\n});\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n\nconst logout = () => ({\n  type: types.authLogout,\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { starLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: 'eescobar@computin.cl',\n    lPassword: 'gracielita',\n  });\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: 'Hernan',\n    rEmail: 'hescobar@computin.cl',\n    rPassword1: '123456',\n    rPassword2: '123456',\n  });\n\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n  const { lEmail, lPassword } = formLoginValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(starLogin(lEmail, lPassword));\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Las contraseñas deben ser identicas', 'error');\n    }\n\n    dispatch(startRegister(rName, rEmail, rPassword1));\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const NavBar = () => {\n  const { name } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\" onClick={handleLogout}>\n      <span className=\"navbar-brand\">{name}</span>\n      <button className=\"btn btn-outline-danger\">\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Salir</span>\n      </button>\n    </div>\n  );\n};\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n  const {\n    title,\n    user: { name },\n  } = event;\n\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span> - {name}</span>\n    </div>\n  );\n};\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport {\n  eventClearActive,\n  eventStartAddNew,\n  eventStartUpdate,\n} from '../../actions/events';\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst later = now.clone().add(1, 'hour');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: later.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const dispatch = useDispatch();\n\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [dateEnd, setDateEnd] = useState(later.toDate());\n\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { title, notes, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  Modal.setAppElement('#root');\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActive());\n    setFormValues(initEvent);\n  };\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e,\n    });\n  };\n\n  const handleEndDateChange = (e) => {\n    setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire({\n        title: 'Error!',\n        text: 'La fecha fin debe ser mayor a la de inicio',\n        icon: 'error',\n      });\n    }\n\n    if (title.trim().length < 2) {\n      return setTitleValid(false);\n    }\n\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n      closeTimeoutMS={200}\n    >\n      <h1> {activeEvent ? 'Editar Evento' : 'Nuevo evento'} </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmitForm}>\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={dateEnd}\n            className=\"form-control\"\n            minDate={dateStart}\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${titleValid && 'is-invalid'}`}\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            value={title}\n            onChange={handleInputChange}\n            autoComplete=\"off\"\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Información adicional\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleClickModal = () => {\n    dispatch(uiOpenModal());\n  };\n\n  return (\n    <button onClick={handleClickModal} className=\"btn btn-primary fab\">\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  };\n  return (\n    <button onClick={handleDelete} className=\"btn btn-danger fab-danger\">\n      <i className=\"fas fa-trash\"></i>\n      <span>Borrar evento</span>\n    </button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { NavBar } from '../ui/NavBar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport 'moment/locale/es-us';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport {\n  eventClearActive,\n  eventSetActive,\n  eventStartLoading,\n} from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  );\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActive());\n  };\n\n  const eventStyleGetter = (event, start, end, isSelectes) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367cf7' : '#465660',\n      borderRadius: '0',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <NavBar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        components={{\n          event: CalendarEvent,\n        }}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n      />\n\n      <AddNewFab />\n      {activeEvent && <DeleteEventFab />}\n      <CalendarModal />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRouter = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  const path = rest.location.pathname;\n  localStorage.setItem('lastPath', path);\n\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRouter.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRouter } from './PrivateRouter';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <h1>cargando...</h1>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            isAuthenticated={!!uid}\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n          />\n          <PrivateRouter\n            isAuthenticated={!!uid}\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  checking: true,\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\n//  {\n//       id: new Date().getTime(),\n//       title: 'Cumpleaños de Graciela',\n//       start: moment().toDate(),\n//       end: moment().add(2, 'hours').toDate(),\n//       notes: 'Comprar la torta',\n//       user: {\n//         _id: '123',\n//         name: 'Eduardo',\n//       },\n//     },\n\nconst initState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n\n    case types.eventClearActive:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event.id === action.payload.id ? action.payload : event\n        ),\n      };\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter(\n          (event) => event.id !== state.activeEvent.id\n        ),\n        activeEvent: null,\n      };\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    case types.eventLogout:\n      return {\n        ...initState,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}